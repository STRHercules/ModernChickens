import org.gradle.api.file.RelativePath
import java.util.Locale

plugins {
    id 'net.neoforged.moddev' version '1.0.11'
    id 'maven-publish'
}

version = '1.0.6'
group = 'com.setycz.chickens'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            srcDir 'build/generated/resources'
        }
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.neoforged.net/releases' }
    maven { url = 'https://maven.blamejared.com' }
}

tasks.named('processResources') {
    notCompatibleWithConfigurationCache("Resource remapping mutates RelativePath instances at execution time")
    from('OriginalChickens/src/main/resources')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    inputs.property('modVersion', version)
    filesMatching('META-INF/neoforge.mods.toml') {
        expand('file': ['jarVersion': project.version])
    }
    eachFile { details ->
        def segments = details.relativePath.segments.clone()
        if (segments.length >= 4) {
            if (segments[3] == 'blocks') {
                segments[3] = 'block'
                details.relativePath = new RelativePath(details.relativePath.isFile(), segments)
            } else if (segments[3] == 'items') {
                segments[3] = 'item'
                details.relativePath = new RelativePath(details.relativePath.isFile(), segments)
            }
        }
        if (details.relativePath.pathString.startsWith('assets/chickens/textures/entity/') && details.name.endsWith('.png')) {
            segments = details.relativePath.segments.clone()
            segments[segments.length - 1] = details.name.toLowerCase(Locale.ROOT)
            details.relativePath = new RelativePath(details.relativePath.isFile(), segments)
        }
    }
    filesMatching('assets/chickens/models/**/*.json') {
        filter { line ->
            line.replace('chickens:blocks/', 'chickens:block/').replace('chickens:items/', 'chickens:item/')
        }
    }
}

dependencies {
    // Hook into JEI so the modernised recipe categories can render in-game guidance.
    implementation "mezz.jei:jei-${project.minecraft_version}-neoforge:${project.jei_version}"
}

neoForge {
    version = project.neoforge_version
    addModdingDependenciesTo(sourceSets.main)
    runs {
        client { client() }
        server { server() }
        data {
        data()
        programArguments.addAll("--mod", "chickens")
    }
    }
    mods {
        modernchickens {
            sourceSet sourceSets.main
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
