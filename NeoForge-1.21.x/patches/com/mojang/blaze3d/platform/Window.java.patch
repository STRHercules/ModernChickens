--- a/com/mojang/blaze3d/platform/Window.java
+++ b/com/mojang/blaze3d/platform/Window.java
@@ -93,6 +_,10 @@
         GLFW.glfwWindowHint(139267, 3);
         GLFW.glfwWindowHint(139272, 204801);
         GLFW.glfwWindowHint(139270, 1);
+        var earlyLoadingScreen = net.neoforged.fml.loading.EarlyLoadingScreenController.current();
+        if (earlyLoadingScreen != null) {
+            this.handle = takeOverWindow(earlyLoadingScreen, p_85376_);
+        } else {
         this.handle = GLFW.glfwCreateWindow(this.width, this.height, p_85376_, this.fullscreen && monitor != null ? monitor.getMonitor() : 0L, 0L);
         if (monitor != null) {
             VideoMode videomode = monitor.getPreferredVidMode(this.fullscreen ? this.preferredFullscreenVideoMode : Optional.empty());
@@ -105,6 +_,7 @@
             this.windowedX = this.x = aint1[0];
             this.windowedY = this.y = aint[0];
         }
+        }
 
         this.setMode();
         this.refreshFramebufferSize();
@@ -206,8 +_,10 @@
     }
 
     public void defaultErrorCallback(int p_85383_, long p_85384_) {
-        RenderSystem.assertOnRenderThread();
         String s = MemoryUtil.memUTF8(p_85384_);
+        if (!RenderSystem.isOnRenderThread()) {
+            throw new IllegalStateException("Encountered GL error off-thread @ " + errorSection + ": " + p_85383_ + ": " + s);
+        }
         LOGGER.error("########## GL ERROR ##########");
         LOGGER.error("@ {}", this.errorSection);
         LOGGER.error("{}: {}", p_85383_, s);
@@ -510,5 +_,26 @@
         WindowInitFailed(String p_85455_) {
             super(p_85455_);
         }
+    }
+
+    // Neo take over window and its properties from early display
+    private long takeOverWindow(net.neoforged.fml.loading.EarlyLoadingScreenController earlyLoadingScreen, String title) {
+        long window = earlyLoadingScreen.takeOverGlfwWindow();
+
+        GLFW.glfwSetWindowTitle(window, title);
+
+        var x = new int[1];
+        var y = new int[1];
+        GLFW.glfwGetWindowPos(window, x, y);
+        this.x = this.windowedX = x[0];
+        this.y = this.windowedY = y[0];
+
+        var width = new int[1];
+        var height = new int[1];
+        GLFW.glfwGetWindowSize(window, width, height);
+        this.width = this.windowedWidth = width[0];
+        this.height = this.windowedHeight = height[0];
+
+        return window;
     }
 }
