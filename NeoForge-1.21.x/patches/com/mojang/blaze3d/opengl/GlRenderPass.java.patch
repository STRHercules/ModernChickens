--- a/com/mojang/blaze3d/opengl/GlRenderPass.java
+++ b/com/mojang/blaze3d/opengl/GlRenderPass.java
@@ -20,7 +_,7 @@
 @OnlyIn(Dist.CLIENT)
 public class GlRenderPass implements RenderPass {
     protected static final int MAX_VERTEX_BUFFERS = 1;
-    public static final boolean VALIDATION = SharedConstants.IS_RUNNING_IN_IDE;
+    public static final boolean VALIDATION = SharedConstants.IS_RUNNING_IN_IDE && !Boolean.getBoolean("neoforge.disableGlValidation");
     private final GlCommandEncoder encoder;
     private final boolean hasDepthTexture;
     private boolean closed;
@@ -69,6 +_,7 @@
 
     @Override
     public void setPipeline(RenderPipeline p_409823_) {
+        p_409823_ = com.mojang.blaze3d.systems.RenderSystem.applyPipelineModifiers(p_409823_);
         if (this.pipeline == null || this.pipeline.info() != p_409823_) {
             this.dirtyUniforms.addAll(this.uniforms.keySet());
             this.dirtyUniforms.addAll(this.samplers.keySet());
@@ -103,6 +_,11 @@
             this.uniforms.put(p_409689_, p_418312_);
             this.dirtyUniforms.add(p_409689_);
         }
+    }
+
+    @Override
+    public void setViewport(int x, int y, int width, int height){
+        GlStateManager._viewport(x, y, width, height);
     }
 
     @Override
