--- a/net/minecraft/world/level/block/BaseRailBlock.java
+++ b/net/minecraft/world/level/block/BaseRailBlock.java
@@ -52,7 +_,7 @@
 
     @Override
     protected VoxelShape getShape(BlockState p_49403_, BlockGetter p_49404_, BlockPos p_49405_, CollisionContext p_49406_) {
-        return p_49403_.getValue(this.getShapeProperty()).isSlope() ? SHAPE_SLOPE : SHAPE_FLAT;
+        return getRailDirection(p_49403_, p_49404_, p_49405_, null).isSlope() ? SHAPE_SLOPE : SHAPE_FLAT;
     }
 
     @Override
@@ -79,7 +_,7 @@
     @Override
     protected void neighborChanged(BlockState p_49377_, Level p_49378_, BlockPos p_49379_, Block p_49380_, @Nullable Orientation p_361387_, boolean p_49382_) {
         if (!p_49378_.isClientSide() && p_49378_.getBlockState(p_49379_).is(this)) {
-            RailShape railshape = p_49377_.getValue(this.getShapeProperty());
+            RailShape railshape = getRailDirection(p_49377_, p_49378_, p_49379_, null);
             if (shouldBeRemoved(p_49379_, p_49378_, railshape)) {
                 dropResources(p_49377_, p_49378_, p_49379_);
                 p_49378_.removeBlock(p_49379_, p_49382_);
@@ -115,7 +_,7 @@
         if (p_49368_.isClientSide()) {
             return p_49370_;
         } else {
-            RailShape railshape = p_49370_.getValue(this.getShapeProperty());
+            RailShape railshape = getRailDirection(p_49370_, p_49368_, p_49369_, null);
             return new RailState(p_49368_, p_49369_, p_49370_).place(p_49368_.hasNeighborSignal(p_49369_), p_49371_, railshape).getState();
         }
     }
@@ -123,7 +_,7 @@
     @Override
     protected void affectNeighborsAfterRemoval(BlockState p_393821_, ServerLevel p_394170_, BlockPos p_394092_, boolean p_393869_) {
         if (!p_393869_) {
-            if (p_393821_.getValue(this.getShapeProperty()).isSlope()) {
+            if (getRailDirection(p_393821_, p_394170_, p_394092_, null).isSlope()) {
                 p_394170_.updateNeighborsAt(p_394092_.above(), this);
             }
 
@@ -144,6 +_,11 @@
         return blockstate.setValue(this.getShapeProperty(), flag1 ? RailShape.EAST_WEST : RailShape.NORTH_SOUTH).setValue(WATERLOGGED, flag);
     }
 
+    /**
+     * @deprecated Forge: Use {@link BaseRailBlock#getRailDirection(BlockState, BlockGetter, BlockPos, net.minecraft.world.entity.vehicle.AbstractMinecart)} for enhanced ability
+     * If you do change this property be aware that other functions in this/subclasses may break as they can make assumptions about this property
+     */
+    @Deprecated
     public abstract Property<RailShape> getShapeProperty();
 
     protected RailShape rotate(RailShape p_418148_, Rotation p_418036_) {
@@ -299,5 +_,15 @@
     @Override
     protected FluidState getFluidState(BlockState p_152158_) {
         return p_152158_.getValue(WATERLOGGED) ? Fluids.WATER.getSource(false) : super.getFluidState(p_152158_);
+    }
+
+    @Override
+    public boolean isFlexibleRail(BlockState state, BlockGetter world, BlockPos pos) {
+         return !this.isStraight;
+    }
+
+    @Override
+    public RailShape getRailDirection(BlockState state, BlockGetter world, BlockPos pos, @org.jetbrains.annotations.Nullable net.minecraft.world.entity.vehicle.AbstractMinecart cart) {
+         return state.getValue(getShapeProperty());
     }
 }
