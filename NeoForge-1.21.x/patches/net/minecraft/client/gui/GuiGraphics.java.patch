--- a/net/minecraft/client/gui/GuiGraphics.java
+++ b/net/minecraft/client/gui/GuiGraphics.java
@@ -95,6 +_,7 @@
     @Nullable
     private Runnable deferredTooltip;
     private final List<GuiGraphics.OutlineBox> deferredOutlines = new ArrayList<>();
+    private ItemStack tooltipStack = ItemStack.EMPTY;
 
     private GuiGraphics(Minecraft p_282144_, Matrix3x2fStack p_415937_, GuiRenderState p_415955_) {
         this.minecraft = p_282144_;
@@ -949,6 +_,8 @@
             this.renderItemCooldown(p_283349_, p_282641_, p_282146_);
             this.renderItemCount(p_282005_, p_283349_, p_282641_, p_282146_, p_282803_);
             this.pose.popMatrix();
+            // TODO 1.21.2: This probably belongs in one of the sub-methods.
+            net.neoforged.neoforge.client.ItemDecoratorHandler.of(p_283349_).render(this, p_282005_, p_283349_, p_282641_, p_282146_);
         }
     }
 
@@ -961,6 +_,7 @@
     }
 
     public void setTooltipForNextFrame(Font p_419878_, ItemStack p_419655_, int p_419935_, int p_419559_) {
+        this.tooltipStack = p_419655_;
         this.setTooltipForNextFrame(
             p_419878_,
             Screen.getTooltipFromItem(this.minecraft, p_419655_),
@@ -969,6 +_,17 @@
             p_419559_,
             p_419655_.get(DataComponents.TOOLTIP_STYLE)
         );
+        this.tooltipStack = ItemStack.EMPTY;
+    }
+
+    public void setTooltipForNextFrame(Font font, List<Component> textComponents, Optional<TooltipComponent> tooltipComponent, ItemStack stack, int mouseX, int mouseY) {
+        setTooltipForNextFrame(font, textComponents, tooltipComponent, stack, mouseX, mouseY, null);
+    }
+
+    public void setTooltipForNextFrame(Font font, List<Component> textComponents, Optional<TooltipComponent> tooltipComponent, ItemStack stack, int mouseX, int mouseY, @Nullable ResourceLocation backgroundTexture) {
+        this.tooltipStack = stack;
+        this.setTooltipForNextFrame(font, textComponents, tooltipComponent, mouseX, mouseY, backgroundTexture);
+        this.tooltipStack = ItemStack.EMPTY;
     }
 
     public void setTooltipForNextFrame(Font p_419603_, List<Component> p_419948_, Optional<TooltipComponent> p_419787_, int p_419566_, int p_420005_) {
@@ -978,11 +_,7 @@
     public void setTooltipForNextFrame(
         Font p_420034_, List<Component> p_419494_, Optional<TooltipComponent> p_419637_, int p_419571_, int p_419535_, @Nullable ResourceLocation p_419579_
     ) {
-        List<ClientTooltipComponent> list = p_419494_.stream()
-            .map(Component::getVisualOrderText)
-            .map(ClientTooltipComponent::create)
-            .collect(Util.toMutableList());
-        p_419637_.ifPresent(p_337410_ -> list.add(list.isEmpty() ? 0 : 1, ClientTooltipComponent.create(p_337410_)));
+        List<ClientTooltipComponent> list = net.neoforged.neoforge.client.ClientHooks.gatherTooltipComponents(this.tooltipStack, p_419494_, p_419637_, p_419571_, guiWidth(), guiHeight(), p_420034_);
         this.setTooltipForNextFrameInternal(p_420034_, list, p_419571_, p_419535_, DefaultTooltipPositioner.INSTANCE, p_419579_, false);
     }
 
@@ -995,13 +_,14 @@
     }
 
     public void setComponentTooltipForNextFrame(Font p_419927_, List<Component> p_419807_, int p_419887_, int p_420035_) {
-        this.setComponentTooltipForNextFrame(p_419927_, p_419807_, p_419887_, p_420035_, null);
+        this.setComponentTooltipForNextFrame(p_419927_, p_419807_, p_419887_, p_420035_, (ResourceLocation) null);
     }
 
     public void setComponentTooltipForNextFrame(Font p_419540_, List<Component> p_419714_, int p_419554_, int p_419672_, @Nullable ResourceLocation p_419660_) {
+        List<ClientTooltipComponent> components = net.neoforged.neoforge.client.ClientHooks.gatherTooltipComponents(this.tooltipStack, p_419714_, p_419554_, guiWidth(), guiHeight(), p_419540_);
         this.setTooltipForNextFrameInternal(
             p_419540_,
-            p_419714_.stream().map(Component::getVisualOrderText).map(ClientTooltipComponent::create).toList(),
+            components,
             p_419554_,
             p_419672_,
             DefaultTooltipPositioner.INSTANCE,
@@ -1010,6 +_,28 @@
         );
     }
 
+    public void setComponentTooltipForNextFrame(Font font, List<? extends net.minecraft.network.chat.FormattedText> tooltips, int mouseX, int mouseY, ItemStack stack) {
+        setComponentTooltipForNextFrame(font, tooltips, mouseX, mouseY, stack, null);
+    }
+
+    public void setComponentTooltipForNextFrame(Font font, List<? extends net.minecraft.network.chat.FormattedText> tooltips, int mouseX, int mouseY, ItemStack stack, @Nullable ResourceLocation backgroundTexture) {
+        this.tooltipStack = stack;
+        List<ClientTooltipComponent> components = net.neoforged.neoforge.client.ClientHooks.gatherTooltipComponents(stack, tooltips, mouseX, guiWidth(), guiHeight(), font);
+        this.setTooltipForNextFrameInternal(font, components, mouseX, mouseY, DefaultTooltipPositioner.INSTANCE, backgroundTexture, false);
+        this.tooltipStack = ItemStack.EMPTY;
+    }
+
+    public void setComponentTooltipFromElementsForNextFrame(Font font, List<com.mojang.datafixers.util.Either<FormattedText, TooltipComponent>> elements, int mouseX, int mouseY, ItemStack stack) {
+        setComponentTooltipFromElementsForNextFrame(font, elements, mouseX, mouseY, stack, null);
+    }
+
+    public void setComponentTooltipFromElementsForNextFrame(Font font, List<com.mojang.datafixers.util.Either<FormattedText, TooltipComponent>> elements, int mouseX, int mouseY, ItemStack stack, @Nullable ResourceLocation backgroundTexture) {
+        this.tooltipStack = stack;
+        List<ClientTooltipComponent> components = net.neoforged.neoforge.client.ClientHooks.gatherTooltipComponentsFromElements(stack, elements, mouseX, guiWidth(), guiHeight(), font);
+        this.setTooltipForNextFrameInternal(font, components, mouseX, mouseY, DefaultTooltipPositioner.INSTANCE, backgroundTexture, false);
+        this.tooltipStack = ItemStack.EMPTY;
+    }
+
     public void setTooltipForNextFrame(Font p_419718_, List<? extends FormattedCharSequence> p_419502_, int p_419583_, int p_419996_) {
         this.setTooltipForNextFrame(p_419718_, p_419502_, p_419583_, p_419996_, null);
     }
@@ -1047,7 +_,8 @@
     ) {
         if (!p_419687_.isEmpty()) {
             if (this.deferredTooltip == null || p_419788_) {
-                this.deferredTooltip = () -> this.renderTooltip(p_419941_, p_419687_, p_419453_, p_419611_, p_419886_, p_419692_);
+                ItemStack capturedTooltipStack = this.tooltipStack;
+                this.deferredTooltip = () -> this.renderTooltip(p_419941_, p_419687_, p_419453_, p_419611_, p_419886_, p_419692_, capturedTooltipStack);
             }
         }
     }
@@ -1060,6 +_,25 @@
         ClientTooltipPositioner p_419610_,
         @Nullable ResourceLocation p_371766_
     ) {
+        this.renderTooltip(p_371715_, p_371741_, p_371500_, p_371755_, p_419610_, p_371766_, ItemStack.EMPTY);
+    }
+
+    public void renderTooltip(
+            Font p_371715_,
+            List<ClientTooltipComponent> p_371741_,
+            int p_371500_,
+            int p_371755_,
+            ClientTooltipPositioner p_419610_,
+            @Nullable ResourceLocation p_371766_,
+            ItemStack tooltipStack
+    ) {
+        var preEvent = net.neoforged.neoforge.client.ClientHooks.onRenderTooltipPre(tooltipStack, this, p_371500_, p_371755_, guiWidth(), guiHeight(), p_371741_, p_371715_, p_419610_);
+        if (preEvent.isCanceled()) return;
+
+        p_371715_ = preEvent.getFont();
+        p_371500_ = preEvent.getX();
+        p_371755_ = preEvent.getY();
+
         int i = 0;
         int j = p_371741_.size() == 1 ? -2 : 0;
 
@@ -1078,7 +_,8 @@
         int l = vector2ic.x();
         int i1 = vector2ic.y();
         this.pose.pushMatrix();
-        TooltipRenderUtil.renderTooltipBackground(this, l, i1, i, j, p_371766_);
+        var textureEvent = net.neoforged.neoforge.client.ClientHooks.onRenderTooltipTexture(this.tooltipStack, this, l, i1, preEvent.getFont(), p_371741_, p_371766_);
+        TooltipRenderUtil.renderTooltipBackground(this, l, i1, i, j, textureEvent.getTexture());
         int j1 = i1;
 
         for (int k1 = 0; k1 < p_371741_.size(); k1++) {
@@ -1310,6 +_,31 @@
     public void submitProfilerChartRenderState(List<ResultField> p_415873_, int p_415651_, int p_416392_, int p_415782_, int p_416254_) {
         this.guiRenderState
             .submitPicturesInPictureState(new GuiProfilerChartRenderState(p_415873_, p_415651_, p_416392_, p_415782_, p_416254_, this.scissorStack.peek()));
+    }
+
+    /**
+     * Neo: Submit a custom {@link net.minecraft.client.gui.render.state.GuiElementRenderState} for rendering
+     */
+    public void submitGuiElementRenderState(net.minecraft.client.gui.render.state.GuiElementRenderState renderState) {
+        this.guiRenderState.submitGuiElement(renderState);
+    }
+
+    /**
+     * Neo: Submit a custom {@link net.minecraft.client.gui.render.state.pip.PictureInPictureRenderState} for rendering
+     *
+     * @see net.neoforged.neoforge.client.event.RegisterPictureInPictureRenderersEvent
+     */
+    public void submitPictureInPictureRenderState(net.minecraft.client.gui.render.state.pip.PictureInPictureRenderState renderState) {
+        this.guiRenderState.submitPicturesInPictureState(renderState);
+    }
+
+    /**
+     * Neo: Returns the top-most scissor rectangle, if present, for use with custom {@link net.minecraft.client.gui.render.state.GuiElementRenderState}s
+     * and {@link net.minecraft.client.gui.render.state.pip.PictureInPictureRenderState}s
+     */
+    @Nullable
+    public ScreenRectangle peekScissorStack() {
+        return this.scissorStack.peek();
     }
 
     public TextureAtlasSprite getSprite(Material p_433908_) {
