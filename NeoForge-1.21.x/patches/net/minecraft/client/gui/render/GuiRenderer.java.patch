--- a/net/minecraft/client/gui/render/GuiRenderer.java
+++ b/net/minecraft/client/gui/render/GuiRenderer.java
@@ -109,7 +_,8 @@
     private final MultiBufferSource.BufferSource bufferSource;
     private final SubmitNodeCollector submitNodeCollector;
     private final FeatureRenderDispatcher featureRenderDispatcher;
-    private final Map<Class<? extends PictureInPictureRenderState>, PictureInPictureRenderer<?>> pictureInPictureRenderers;
+    private final Map<Class<? extends PictureInPictureRenderState>, net.neoforged.neoforge.client.gui.PictureInPictureRendererPool<?>> pictureInPictureRendererPools;
+    private final Set<PictureInPictureRenderState> pictureInPictureRenderStatesScratch = new it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet<>();
     @Nullable
     private GpuTexture itemsAtlas;
     @Nullable
@@ -136,19 +_,13 @@
         MultiBufferSource.BufferSource p_415673_,
         SubmitNodeCollector p_440036_,
         FeatureRenderDispatcher p_439972_,
-        List<PictureInPictureRenderer<?>> p_415849_
+        List<net.neoforged.neoforge.client.gui.PictureInPictureRendererRegistration<?>> pipRendererFactories
     ) {
         this.renderState = p_416418_;
         this.bufferSource = p_415673_;
         this.submitNodeCollector = p_440036_;
         this.featureRenderDispatcher = p_439972_;
-        Builder<Class<? extends PictureInPictureRenderState>, PictureInPictureRenderer<?>> builder = ImmutableMap.builder();
-
-        for (PictureInPictureRenderer<?> pictureinpicturerenderer : p_415849_) {
-            builder.put((Class<? extends PictureInPictureRenderState>)pictureinpicturerenderer.getRenderStateClass(), pictureinpicturerenderer);
-        }
-
-        this.pictureInPictureRenderers = builder.buildOrThrow();
+        this.pictureInPictureRendererPools = net.neoforged.neoforge.client.gui.PictureInPictureRendererPool.createPools(p_415673_, pipRendererFactories);
     }
 
     public void incrementFrameNumber() {
@@ -168,6 +_,7 @@
         this.renderState.reset();
         this.firstDrawIndexAfterBlur = Integer.MAX_VALUE;
         this.clearUnusedOversizedItemRenderers();
+        this.pictureInPictureRendererPools.values().forEach(net.neoforged.neoforge.client.gui.PictureInPictureRendererPool::clearUnusedRenderers);
         if (SharedConstants.DEBUG_SHUFFLE_UI_RENDERING_ORDER) {
             RenderPipeline.updateSortKeySeed();
             TextureSetup.updateSortKeySeed();
@@ -429,14 +_,31 @@
 
     private void preparePictureInPicture() {
         int i = Minecraft.getInstance().getWindow().getGuiScale();
-        this.renderState.forEachPictureInPicture(p_417621_ -> this.preparePictureInPictureState(p_417621_, i));
+        this.pictureInPictureRenderStatesScratch.clear();
+        this.renderState.forEachPictureInPicture(state -> {
+            if (this.preparePictureInPictureState(state, i, true)) {
+                this.pictureInPictureRenderStatesScratch.add(state);
+            }
+        });
+        this.renderState.forEachPictureInPicture(state -> {
+            if (this.pictureInPictureRenderStatesScratch.add(state)) {
+                this.preparePictureInPictureState(state, i, false);
+            }
+        });
+        this.pictureInPictureRenderStatesScratch.clear();
     }
 
-    private <T extends PictureInPictureRenderState> void preparePictureInPictureState(T p_415554_, int p_415565_) {
-        PictureInPictureRenderer<T> pictureinpicturerenderer = (PictureInPictureRenderer<T>)this.pictureInPictureRenderers.get(p_415554_.getClass());
+    private <T extends PictureInPictureRenderState> boolean preparePictureInPictureState(T p_415554_, int p_415565_, boolean firstPass) {
+        var pool = (net.neoforged.neoforge.client.gui.PictureInPictureRendererPool<T>)this.pictureInPictureRendererPools.get(p_415554_.getClass());
+        if (pool == null) {
+            return false;
+        }
+        PictureInPictureRenderer<T> pictureinpicturerenderer = pool.get(p_415554_, p_415565_, firstPass);
         if (pictureinpicturerenderer != null) {
             pictureinpicturerenderer.prepare(p_415554_, this.renderState, p_415565_);
+            return true;
         }
+        return false;
     }
 
     private void renderItemToAtlas(TrackingItemStackRenderState p_428843_, PoseStack p_416703_, int p_416443_, int p_416400_, int p_416052_) {
@@ -710,7 +_,7 @@
             this.itemsAtlasDepthView.close();
         }
 
-        this.pictureInPictureRenderers.values().forEach(PictureInPictureRenderer::close);
+        this.pictureInPictureRendererPools.values().forEach(net.neoforged.neoforge.client.gui.PictureInPictureRendererPool::close);
         this.guiProjectionMatrixBuffer.close();
         this.itemsProjectionMatrixBuffer.close();
 
