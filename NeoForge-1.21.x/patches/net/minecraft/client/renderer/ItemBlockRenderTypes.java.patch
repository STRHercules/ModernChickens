--- a/net/minecraft/client/renderer/ItemBlockRenderTypes.java
+++ b/net/minecraft/client/renderer/ItemBlockRenderTypes.java
@@ -19,6 +_,7 @@
 
 @OnlyIn(Dist.CLIENT)
 public class ItemBlockRenderTypes {
+    @Deprecated
     private static final Map<Block, ChunkSectionLayer> TYPE_BY_BLOCK = Util.make(Maps.newHashMap(), p_436495_ -> {
         ChunkSectionLayer chunksectionlayer = ChunkSectionLayer.TRIPWIRE;
         p_436495_.put(Blocks.TRIPWIRE, chunksectionlayer);
@@ -363,6 +_,8 @@
     });
     private static boolean renderCutout;
 
+    /** @deprecated Neo: Use {@link net.minecraft.client.renderer.block.model.BlockModelPart#getRenderType(BlockState)}. */
+    @Deprecated // Note: this method does NOT support model-based render types
     public static ChunkSectionLayer getChunkRenderType(BlockState p_109283_) {
         Block block = p_109283_.getBlock();
         if (block instanceof LeavesBlock) {
@@ -373,6 +_,8 @@
         }
     }
 
+    /** @deprecated Neo: Use {@link net.neoforged.neoforge.client.RenderTypeHelper#getMovingBlockRenderType(ChunkSectionLayer)} with the result of {@link net.minecraft.client.renderer.block.model.BlockModelPart#getRenderType(BlockState)}. */
+    @Deprecated // Note: this method does NOT support model-based render types
     public static RenderType getMovingBlockRenderType(BlockState p_109294_) {
         Block block = p_109294_.getBlock();
         if (block instanceof LeavesBlock) {
@@ -393,11 +_,15 @@
         }
     }
 
+    /** @deprecated Neo: Use {@link net.neoforged.neoforge.client.RenderTypeHelper#getEntityRenderType(ChunkSectionLayer)} with the result of {@link net.minecraft.client.renderer.block.model.BlockModelPart#getRenderType(BlockState)}. */
+    @Deprecated // Note: this method does NOT support model-based render types
     public static RenderType getRenderType(BlockState p_366653_) {
         ChunkSectionLayer chunksectionlayer = getChunkRenderType(p_366653_);
         return chunksectionlayer == ChunkSectionLayer.TRANSLUCENT ? Sheets.translucentItemSheet() : Sheets.cutoutBlockSheet();
     }
 
+    /** @deprecated Neo: See {@link net.minecraft.client.renderer.item.BlockModelWrapper#renderType}. */
+    @Deprecated // Note: this method does NOT support model-based render types
     public static RenderType getRenderType(ItemStack p_366701_) {
         if (p_366701_.getItem() instanceof BlockItem blockitem) {
             Block block = blockitem.getBlock();
@@ -414,5 +_,30 @@
 
     public static void setFancy(boolean p_109292_) {
         renderCutout = p_109292_;
+    }
+
+    // Neo: RenderType for block setters injected
+    /**
+     * Helper to set the RenderType for Blocks
+     * @deprecated Set your render type in your block model's JSON (e.g. {@code "render_type": "cutout"}) or override {@link net.minecraft.client.renderer.block.model.BlockModelPart#getRenderType(BlockState)}
+     * */
+    @Deprecated(since = "1.19")
+    public static synchronized void setRenderLayer(Block block, ChunkSectionLayer layer) {
+        checkClientLoading();
+        TYPE_BY_BLOCK.put(block, layer);
+    }
+
+    /**
+     * Helper to set the RenderType for Fluids
+     */
+    public static synchronized void setRenderLayer(Fluid fluid, ChunkSectionLayer layer) {
+        checkClientLoading();
+        LAYER_BY_FLUID.put(fluid, layer);
+    }
+
+    private static void checkClientLoading() {
+        com.google.common.base.Preconditions.checkState(net.neoforged.neoforge.client.loading.ClientModLoader.isLoading(),
+                  "Render layers can only be set during client loading! This should ideally be done from `FMLClientSetupEvent`."
+        );
     }
 }
