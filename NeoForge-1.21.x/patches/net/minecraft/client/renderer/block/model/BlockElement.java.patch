--- a/net/minecraft/client/renderer/block/model/BlockElement.java
+++ b/net/minecraft/client/renderer/block/model/BlockElement.java
@@ -22,12 +_,20 @@
 
 @OnlyIn(Dist.CLIENT)
 public record BlockElement(
-    Vector3fc from, Vector3fc to, Map<Direction, BlockElementFace> faces, @Nullable BlockElementRotation rotation, boolean shade, int lightEmission
+    Vector3fc from, Vector3fc to, Map<Direction, BlockElementFace> faces, @Nullable BlockElementRotation rotation, boolean shade, int lightEmission, net.neoforged.neoforge.client.model.ExtraFaceData faceData
 ) {
     private static final boolean DEFAULT_RESCALE = false;
     private static final float MIN_EXTENT = -16.0F;
     private static final float MAX_EXTENT = 32.0F;
 
+    public BlockElement {
+        faces.values().forEach(face -> face.parent().setValue(this));
+    }
+
+    public BlockElement(Vector3fc from, Vector3fc to, Map<Direction, BlockElementFace> faces, @Nullable BlockElementRotation rotation, boolean shade, int lightEmission) {
+        this(from, to, faces, rotation, shade, lightEmission, net.neoforged.neoforge.client.model.ExtraFaceData.DEFAULT);
+    }
+
     public BlockElement(Vector3fc p_405527_, Vector3fc p_405454_, Map<Direction, BlockElementFace> p_362722_) {
         this(p_405527_, p_405454_, p_362722_, null, true, 0);
     }
@@ -59,7 +_,8 @@
                     }
                 }
 
-                return new BlockElement(vector3f, vector3f1, map, blockelementrotation, flag, i);
+                var faceData = net.neoforged.neoforge.client.model.ExtraFaceData.read(jsonobject.get("neoforge_data"), net.neoforged.neoforge.client.model.ExtraFaceData.DEFAULT);
+                return new BlockElement(vector3f, vector3f1, map, blockelementrotation, flag, i, faceData);
             }
         }
 
