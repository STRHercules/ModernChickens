--- a/net/minecraft/client/renderer/blockentity/ChestRenderer.java
+++ b/net/minecraft/client/renderer/blockentity/ChestRenderer.java
@@ -77,6 +_,8 @@
         if (p_445744_.type != ChestType.SINGLE) {
             p_445744_.lightCoords = neighborcombineresult.apply(new BrightnessCombiner<>()).applyAsInt(p_445744_.lightCoords);
         }
+
+        p_445744_.customMaterial = getCustomMaterial(p_446382_, p_445744_);
     }
 
     public void submit(ChestRenderState p_446740_, PoseStack p_445661_, SubmitNodeCollector p_445570_, CameraRenderState p_451060_) {
@@ -87,7 +_,7 @@
         float f = p_446740_.open;
         f = 1.0F - f;
         f = 1.0F - f * f * f;
-        Material material = Sheets.chooseMaterial(p_446740_.material, p_446740_.type);
+        Material material = p_446740_.customMaterial != null ? p_446740_.customMaterial : Sheets.chooseMaterial(p_446740_.material, p_446740_.type);
         RenderType rendertype = material.renderType(RenderType::entityCutout);
         TextureAtlasSprite textureatlassprite = this.materials.get(material);
         if (p_446740_.type != ChestType.SINGLE) {
@@ -153,5 +_,20 @@
         } else {
             return ChestRenderState.ChestMaterialType.REGULAR;
         }
+    }
+
+    /**
+     * Neo: Return a custom {@link Material} to render the chest with or {@code null} to
+     * fall back to the vanilla material selection.
+     */
+    @Nullable
+    protected Material getCustomMaterial(T blockEntity, ChestRenderState renderState) {
+        return null;
+    }
+
+    @Override
+    public net.minecraft.world.phys.AABB getRenderBoundingBox(T blockEntity) {
+        net.minecraft.core.BlockPos pos = blockEntity.getBlockPos();
+        return net.minecraft.world.phys.AABB.encapsulatingFullBlocks(pos.offset(-1, 0, -1), pos.offset(1, 1, 1));
     }
 }
